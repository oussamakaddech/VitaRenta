# Generated by Django 3.2.16 on 2025-07-16 12:34

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('id', models.CharField(default=users.models.generate_uuid, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(blank=True, default='', help_text="Nom d'utilisateur unique généré automatiquement", max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('nom', models.CharField(default='', max_length=100)),
                ('telephone', models.CharField(blank=True, default='', max_length=20)),
                ('preference_carburant', models.CharField(blank=True, choices=[('électrique', 'Électrique'), ('hybride', 'Hybride'), ('essence', 'Essence'), ('diesel', 'Diesel')], default='', max_length=20)),
                ('role', models.CharField(choices=[('client', 'Client'), ('agence', 'Agence'), ('admin', 'Admin'), ('visiteur', 'Visiteur')], default='visiteur', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login_attempt', models.DateTimeField(blank=True, null=True)),
                ('login_attempts', models.PositiveIntegerField(default=0)),
                ('photo_url', models.URLField(blank=True, null=True)),
                ('budget_journalier', models.DecimalField(decimal_places=2, default=50.0, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agence',
            fields=[
                ('id', models.CharField(default=users.models.generate_uuid, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('adresse', models.CharField(max_length=200)),
                ('ville', models.CharField(max_length=100)),
                ('code_postal', models.CharField(max_length=20)),
                ('pays', models.CharField(max_length=100)),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.CharField(default=users.models.generate_uuid, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('user_id', models.CharField(max_length=36)),
                ('vehicule_id', models.CharField(max_length=36)),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('montant_total', models.DecimalField(decimal_places=2, help_text='Montant total en euros', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('confirmee', 'Confirmée'), ('terminee', 'Terminée'), ('annulee', 'Annulée')], default='en_attente', max_length=20)),
                ('commentaires', models.TextField(blank=True)),
                ('assurance_complete', models.BooleanField(default=False)),
                ('conducteur_supplementaire', models.BooleanField(default=False)),
                ('gps', models.BooleanField(default=False)),
                ('siege_enfant', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Vehicule',
            fields=[
                ('id', models.CharField(default=users.models.generate_uuid, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('marque', models.CharField(max_length=50)),
                ('modele', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('carburant', models.CharField(choices=[('électrique', 'Électrique'), ('hybride', 'Hybride'), ('essence', 'Essence'), ('diesel', 'Diesel')], max_length=20)),
                ('transmission', models.CharField(choices=[('manuelle', 'Manuelle'), ('automatique', 'Automatique')], default='manuelle', max_length=20)),
                ('nombre_places', models.PositiveIntegerField(default=5)),
                ('annee', models.PositiveIntegerField(blank=True, null=True)),
                ('kilometrage', models.PositiveIntegerField(blank=True, null=True)),
                ('couleur', models.CharField(blank=True, max_length=50)),
                ('immatriculation', models.CharField(blank=True, max_length=20)),
                ('emissionsCO2', models.IntegerField(blank=True, help_text='Émissions CO2 en g/km', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('consommationEnergie', models.DecimalField(blank=True, decimal_places=2, help_text='Consommation en L/100km ou kWh/100km', max_digits=5, null=True)),
                ('prix_par_jour', models.DecimalField(decimal_places=2, help_text='Prix quotidien en euros', max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('localisation', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('climatisation', models.BooleanField(default=False)),
                ('equipements', models.JSONField(blank=True, default=list)),
                ('statut', models.CharField(choices=[('disponible', 'Disponible'), ('loué', 'Loué'), ('maintenance', 'Maintenance'), ('hors_service', 'Hors service')], default='disponible', max_length=20)),
                ('date_derniere_maintenance', models.DateField(blank=True, null=True)),
                ('prochaine_maintenance', models.DateField(blank=True, null=True)),
                ('agence_id', models.CharField(blank=True, max_length=36, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='vehicules/')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='vehicule',
            index=models.Index(fields=['marque', 'modele'], name='vehicule_marque_modele_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicule',
            index=models.Index(fields=['statut'], name='vehicule_statut_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicule',
            index=models.Index(fields=['carburant'], name='vehicule_carburant_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicule',
            index=models.Index(fields=['type'], name='vehicule_type_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicule',
            index=models.Index(fields=['created_at'], name='vehicule_created_at_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicule',
            index=models.Index(fields=['agence_id'], name='vehicule_agence_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicule',
            index=models.Index(fields=['prix_par_jour'], name='vehicule_prix_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['date_debut', 'date_fin'], name='reservation_date_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['statut'], name='reservation_statut_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['created_at'], name='reservation_created_at_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['user_id'], name='reservation_user_idx'),
        ),
        migrations.AddIndex(
            model_name='reservation',
            index=models.Index(fields=['vehicule_id'], name='reservation_vehicule_idx'),
        ),
        migrations.AddIndex(
            model_name='agence',
            index=models.Index(fields=['nom'], name='agence_nom_idx'),
        ),
        migrations.AddIndex(
            model_name='agence',
            index=models.Index(fields=['ville'], name='agence_ville_idx'),
        ),
        migrations.AddIndex(
            model_name='agence',
            index=models.Index(fields=['pays'], name='agence_pays_idx'),
        ),
        migrations.AddIndex(
            model_name='agence',
            index=models.Index(fields=['created_at'], name='agence_created_at_idx'),
        ),
        migrations.AddField(
            model_name='user',
            name='agence',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='users.agence'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='user_email_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='user_username_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['date_joined'], name='user_date_joined_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='user_role_idx'),
        ),
    ]
